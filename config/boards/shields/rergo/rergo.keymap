#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define BASEL 0
#define LEFTL 1
#define RGHTL 2
#define NAVEL 3

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};


/ {

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_bspc {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BSPC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

    };

    behaviors {
        hm: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        os: shift_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "ONE_SHOT_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&to>, <&mo>;
            retro-tap;
        };

    };


    //    0    1    2    3    4                 5    6    7    8    9
    //   10   11   12   13   14                15   16   17   18   19
    //   20   21   22   23   24                25   26   27   28   29
    //                       30    31    32    33

    keymap {
        compatible = "zmk,keymap";

        base_layer {
        bindings = <
            &kp Q      &kp W      &kp F      &kp P           &kp B        &kp J   &kp L         &kp U      &kp Y      &kp SEMI
            &hm LSFT A &hm LALT R &hm LCTL S &hm LGUI T      &kp G        &kp K   &hm RGUI N    &hm RCTL E &hm RALT I &hm RSFT O
            &kp Z      &kp X      &kp C      &kp D           &kp V        &kp M   &kp H         &kp CMMA   &kp DOT    &kp FSLH
                                             &os LEFTL LEFTL &kp SPC      &kp RET &mo RGHTL
        >;
        };

        left_layer {
        bindings = <
            &kp ESCL       &kp AT        &kp LBKT      &kp RBKT      &kp CARET     &kp PG_UP     &kp LC(A)       &kp UP   &kp LC(E) &kp UNDER
            &hm LSFT TILDE &hm LALT DLLR &hm LCTL LPAR &hm LGUI RPAR &kp HASH      &kp PG_DN     &kp LEFT        &kp DOWN &kp RIGHT &hm RSFT DQT
            &trans         &trans        &kp LBRC      &kp RBRC      &kp STAR      &kp LGUI(SPC) &kp EQUAL       &trans   &trans    &kp PRCNT
                                                       &to BASEL     &trans        &kp DEL       &os NAVEL NAVEL
        >;
        };

        rght_layer {
        bindings = <
            &kp NUM_1 &kp NUM_2 &kp NUM_3   &kp NUM_4   &kp NUM_5     &kp NUM_6 &kp NUM_7       &kp NUM_8     &kp NUM_9     &kp NUM_0
            &kp TAB   &kp LALT  &hm LCTL LT &hm LGUI GT &trans        &kp QMARK &hm RGUI SQT    &hm RCTL PIPE &hm RALT AMPS &hm RSFT MINUS
            &trans    &trans    &trans      &kp GRAVE   &trans        &trans    &kp PLUS        &trans        &trans        &kp BSLH
                                            &to BASEL   &kp BSPC      &kp ESC   &os NAVEL NAVEL
        >;
        };

        nave_layer {
        bindings = <
            &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans
            &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans
            &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans
                                 &trans &trans    &trans &trans
        >;
        };

    };
};